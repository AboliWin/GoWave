name: Go Multi-Platform Build and Release

on:
  push:
    branches: [ "main" ]  # Trigger on push to main
    tags:                 # Trigger on tag push
      - "v*"
  pull_request:
    branches: [ "main" ]

jobs:

  build-and-release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [windows, linux, darwin]  # Target platforms
        arch: [amd64, arm64]          # Target architectures

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install Dependencies
      run: go mod tidy

    - name: Build Binary
      run: |
        mkdir -p build
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o build/myapp-${{ matrix.os }}-${{ matrix.arch }}

    - name: Test Application
      run: go test -v ./...

    - name: Upload Release Assets
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: build-and-release
    if: failure()
    runs-on: ubuntu-latest

    steps:
    - name: Send Failure Notification
      run: echo "Build failed for ${{ github.ref_name }} on ${{ matrix.os }}-${{ matrix.arch }}."
