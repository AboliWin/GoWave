name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    name: Build and Release Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, macos]
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - { os: windows, goarch: arm64 } # Exclude unsupported combination

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Fetch Dependencies
        run: |
          go mod tidy
          go get github.com/faiface/beep github.com/gdamore/tcell/v2 github.com/tidwall/gjson

      - name: Build Binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          mkdir -p dist
          go build -o dist/${{ matrix.goos }}_${{ matrix.goarch }}/gowave

      - name: Upload Binaries
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: binaries-${{ matrix.os }}-${{ matrix.goarch }}
          path: dist/${{ matrix.goos }}_${{ matrix.goarch }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download All Binaries
        uses: actions/download-artifact@v3
        with:
          path: ./dist

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./dist/**
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automatic release created for version ${{ github.ref_name }}.
            Includes binaries for Linux, Windows, and macOS.
