name: Build and Release GoWave

on:
  push:
    tags:
      - 'v*'  # Trigger on new tags (e.g., v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.18, 1.19, 1.20]  # You can specify which Go versions to test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: |
          go mod tidy

      - name: Build GoWave for ${{ matrix.os }}
        run: |
          GOOS=${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'darwin' || 'linux' }}
          GOARCH=amd64 go build -o go-wave-${GOOS}-${GOARCH} .

      - name: Upload release assets
        if: success()
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            go-wave-linux-amd64
            go-wave-windows-amd64.exe
            go-wave-darwin-amd64
